<link rel="stylesheet" href="styles.css">
<link rel="stylesheet" href="js/mat.css">
<script type="text/javascript" src="js/jquery.js"></script>
<script src="js/mat.js"></script>
<script src="js/axios.js"></script>
<h5 id="models"></h5>
<img src="" id="bigboy" style="display: none;" alt="">

<style>
.grid{
  display: grid;
  column-gap: 50px;
  grid-template-columns: auto auto;
}
#output {
    padding: 0px 0px 0px 50px;
    height: 500px;
    overflow: scroll;
}
</style>

<div class="grid">
<div name="" id="output" cols="30" rows="50"></div>
<div style="position: relative;" class="margin">
  <video onloadedmetadata="onPlay(this)" id="inputVideo" autoplay muted playsinline></video>
  <canvas id="flsvid" width="2560" height="1440" style="display: none;"></canvas>
  <canvas id="overlay"></canvas>

</div>

</div>
<div class="margin">
  <canvas id="showlbl" class="overlay" />

</div>
<br><br><br><br><br>
<form>
    <div class="input-field col s6">
        <input placeholder="Placeholder" id="name" type="text" class="validate" required>
        <label for="first_name">Model Name</label>
      </div>
  <div class="file-field input-field">
    <div class="btn">
      <span>File</span>
      <input type="file" accept=".jpg, .png, .jpeg" multiple>
    </div>
    <div class="file-path-wrapper">
      <input id="imgs" class="file-path validate" type="text" placeholder="Upload at least 5 files" required>
    </div>
  </div>
</form>
<button id="model" class="btn">model</button>
<!-- <button id="data" class="btn">Send</button> -->
<script>
  async function onPlay() {
    const videoEl = $('#inputVideo').get(0)

    if (videoEl.paused || videoEl.ended)
      return setTimeout(() => onPlay())




    setTimeout(() => onPlay())
  }

  async function run() {
    const stream = await navigator.mediaDevices.getUserMedia({ video: {} })
    const videoEl = $('#inputVideo').get(0)
    videoEl.srcObject = stream

  }

  $(document).ready(function () {
    run()
    let img;
    let imgs;
    $('input[type="file"]').change(function (e) {
      imgs = e.target.files;
    });

    axios.get('/models')
        .then(function (response) {
          console.log(response.data);
          response.data.classes.forEach(element => {
            $("#models").append("<li>"+element+"</li>")
          });
          
        })
        .catch(function (error) {
          console.log(error);
        });


    setInterval(() => {
      const canv = document.getElementById("flsvid")
      const ctx = canv.getContext("2d")

      ctx.drawImage($('#inputVideo').get(0), 0, 0, canv.width, canv.height);
      let frmData = new FormData();

       img = canv.toDataURL("image/jpeg")
      frmData.append("img", img)
      axios.post('/r', {
        img: canv.toDataURL("image/jpeg")
      })
        .then(function (response) {
          console.log(response.data);
          response.data.status.forEach(v=>{
            $("#output").html($("#output").html()+"<br/>"+new Date()+ " > <br/><b style='color:red;'>"+v.label+"<b>")
          })
          
          var objDiv = document.getElementById("output");
objDiv.scrollTop = objDiv.scrollHeight;
        })
        .catch(function (error) {
          console.log(error);
        });
    }, 3000);
    $("#model").click(_ => {
      const canv = document.getElementById("flsvid")
      const ctx = canv.getContext("2d")
      ctx.drawImage($('#inputVideo').get(0), 0, 0, canv.width, canv.height);

      var frm = new FormData();
      var arr =  Array.from(imgs)
      frm.append("model",$("#name").val())
    arr.map((v,i, x)=>{
      frm.append("img"+i, v)

      if(x.length===i+1){
       // alert("now sending")
        axios.post('/extract', frm
      ,{
    headers: {
        'Content-Type': 'multipart/form-data'
    }
  })
        .then(function (response) {
         // console.log(response);
          alert("saved")
          window.location.reload()
        //  document.getElementById("bigboy").src = response.data.df
        })
        .catch(function (error) {
          console.log(error);
        });
      }
    })
     
      
    })
  })
</script>